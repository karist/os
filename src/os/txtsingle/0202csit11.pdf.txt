International_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD10.5121/ijcsit.2010.2211_CD 125_CDWrapper_NNP Generator_NNP using_VBG Java_NNP Native_NNP Interface_NNPV.S.Vairale1_NNP and_CC K.N.Honwadkar2_NNP1Department_IN of_IN Computer_NNP Engineering,_NNP AISSMS_NNP College_NNP of_IN Engineering,_NNPSPune_NNP University,_NNP Pune,_NNP India_NNPvaishali.vairale@gmail.com_NN2Department_IN of_IN Computer_NNP Engineering,_NNP D.Y.Patil_NNP College_NNP of_IN Engineering,_NNPSAkurdi,_NNP Pune_NNP University,_NNP Pune,_NNP India_NNPknhonwadkar@yahoo.co.in_NNAbstract_NNThe_DT purpose_NN of_IN this_DT paper_NN is_VBZ to_TO provide_VB a_DT complete_JJ automated_JJ solution_NN to_TO the_DT wrapping_NN and_CC compilation_NN of_INlegacy_JJ code_NN in_IN order_NN to_TO facilitate_VB the_DT use_NN of_IN native_JJ libraries_NNS in_IN effective_JJ ways_NNS through_IN Java_NNP Native_NNPInterface._NNP Legacy_NNP codes_NNS are_VBP those_DT libraries,_JJ command_NN line_NN applications_NNS or_CC other_JJ types_NNS of_IN systems_NNS that_WDTwere_VBD developed_VBN in_IN technologies_NNS older_JJR than_IN currently_RB used_VBN in_IN modern_JJ computing_NN environments._NN Modern_NNPsoftware_NN engineering_NN concepts,_NN like_IN software_NN as_IN a_DT service,_NN allow_VBP the_DT extension_NN of_IN the_DT legacy_NN code_NN lifetime_NNand_CC the_DT reduction_NN of_IN software_NN maintenance_NN costs._VBZ The_DT transformation_NN of_IN a_DT legacy_JJ code_NN into_IN a_DT service_NN is_VBZ not_RBstraightforward_NN task,_NN especially_RB when_WRB the_DT initial_JJ code_NN was_VBD designed_VBN with_IN a_DT rich_JJ user_NN interface._'' This_DT paper_NNdescribes_VBZ a_DT process_NN for_IN the_DT semi-automatic_JJ conversion_NN of_IN numerical_JJ and_CC scientific_JJ routines_NNS written_VBN in_IN the_DTC_NNP programming_NN language_NN into_IN computational_JJ services_NNS that_WDT can_MD be_VB used_VBN within_IN a_DT distributed_VBN service-_NNSoriented_VBN architecture_NN such_JJ as_IN that_IN being_VBG adopted_VBN for_IN Grid_NNP computing._.Keywords_.Legacy_NNP Code,_NNP AWGNL,_NNP C_NNP Wrapping,_NNP JNI,_NNP Data_NNP Mediation,_NNP Wrapper_NNP Generator_NNP1._. Introduction_NNThe_DT purpose_NN of_IN this_DT paper_NN is_VBZ to_TO provide_VB a_DT complete_JJ automated_JJ solution_NN to_TO the_DT wrapping_NN and_CCcompilation_NN of_IN legacy_NN code._NN Java's_NNP object-oriented_VBD features,_JJ platform_NN independence,_NN and_CCnumerous_JJ APIs_NNP for_IN tasks_NNS such_JJ as_IN network_NN programming,_NN XML_NNP processing,_, and_CC GUI_NNP building,_NNmake_VB it_PRP a_DT powerful_JJ and_CC increasingly_RB popular_JJ language_NN for_IN developing_VBG Grid-based_JJ e-Science_NNapplications._NN However,_RB the_DT task_NN of_IN manually_RB converting_VBG the_DT large_JJ body_NN of_IN existing_VBG high_JJ quality,_NNvalidated_JJ code_NN to_TO Grid-enabled,_NNP Java-based_JJ services_NNS is_VBZ both_DT daunting_JJ and_CC expensive._VBZ The_DT main_JJaim_NN of_IN the_DT work_NN described_VBN is_VBZ to_TO make_VB this_DT conversion_NN task_NN as_IN automated_VBN as_IN possible_JJ in_IN order_NN to_TOfacilitate_VB the_DT use_NN of_IN such_JJ services_NNS in_IN composing_VBG Grid-based_JJ scientific_JJ applications._NNRecently,_NNP Scientific_NNP and_CC Engineering_NNP communities_NNS are_VBP employing_VBG Grid_NNP enabled_VBD software_NNapplications._VBG To_TO be_VB widely_RB adopted,_VBN Java_NNP applications_NNS in_IN particular_JJ will_MD require_VB more_JJR support_NN the_DTintegration_NN of_IN legacy_JJ applications._NN C_NNP and_CC C++_NNP programming_NN languages_NNS are_VBP used_VBN extensively_RB for_INscientific_JJ applications_NNS and_CC consequently,_VB the_DT requirement_NN for_IN a_DT method_NN to_TO incorporate_VB software_NNand_CC applications_NNS in_IN C_NNP or_CC C++_NNP is_VBZ of_IN prime_JJ importance._NN Two_CD separate_JJ tools_NNS carry_VBP out_RP the_DT wrapping_VBGand_CC data_NNS mapping_NN functions._VBZ The_DT Automatic_NNP Wrapper_NNP Generator_NNP for_IN Native_NNP Libraries_NNP (AWGNL)_.tool_NN automatically_RB wraps_VBZ C_NNP routines_NNS as_IN Java_NNP code_NN using_VBG the_DT Java_NNP Native_NNP Interface_NNP (JNI)[6]._'' This_DTapproach_NN can_MD be_VB applied_VBN to_TO individual_JJ C_NNP routines,_NN or_CC to_TO whole_JJ libraries,_NN and_CC is_VBZ based_VBN on_IN the_DTroutine_JJ interfaces_NNS given_VBN in_IN the_DT C_NNP header_NN files._VBD AWGNL_NNP allows_VBZ users_NNS with_IN no_DT knowledge_NN of_IN JNI_CDto_TO quickly_RB and_CC easily_RB build_VB a_DT Java_NNP wrapper_NN for_IN C_NNP routines._.The_DT approach_NN taken_VBN is_VBZ similar_JJ to_TO that_DT in_IN the_DT Java-C_NNP Interface_NNP (JCI)._NNP However,_NNP AWGNL_NNP extends_VBZthe_DT JCI_NNP functionality_NN to_TO deal_VB with_IN arrays_NNS of_IN structures,_NN and_CC provides_VBZ a_DT graphical_JJ user_NN interface_NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD126_CDthrough_IN which_WDT users_NNS can_MD wrap_VB legacy_JJ C_NNP libraries._NN Developing_VBG new_JJ codes,_NN incrementing_VBGapplications_NNS with_IN middleware_JJ specific_JJ interfaces,_NN or_CC designing_VBG applications_NNS to_TO explicitly_RB take_VBadvantage_NN of_IN distributed_VBN resources_NNS is_VBZ a_DT significant_JJ burden_NN for_IN the_DT developers_NNS who_WP are_VBP often_RBreluctant_JJ to_TO allocate_VB sufficient_JJ effort_NN on_IN non_JJ application_NN specific_NN problems._VBZ The_DT middleware_NN is_VBZtherefore_RB expected_VBN to_TO ease_VB legacy_NN codes_NNS migration_NN to_TO service-oriented_JJ infrastructures_NNS by_INproposing_VBG a_DT non-intrusive_JJ interface_NN to_TO existing_VBG legacy_NN codes,_NN and_CC optimizing_VBG the_DT execution_NN of_IN the_DTapplication_NN on_IN the_DT available_JJ resources._NN In_IN this_DT context,_NN enabling_VBG legacy_JJ code_NN execution_NN on_INservice-oriented_JJ infrastructures_NNS is_VBZ a_DT high_JJ priority_NN challenge._NNThe_DT JNI_NNP is_VBZ used_VBN to_TO write_VB native_JJ methods_NNS to_TO handle_VB situations_NNS when_WRB an_DT application_NN cannot_RB be_VBwritten_VBN entirely_RB in_IN the_DT Java_NNP programming_NN language_NN such_JJ as_IN when_WRB the_DT standard_JJ Java_NNP class_NN library_NNdoes_VBZ not_RB support_VB the_DT platform-specific_JJ features_NNS or_CC program_NN library._NN It_PRP is_VBZ also_RB used_VBN to_TO modify_VB an_DTexisting_VBG application,_NN written_VBN in_IN another_DT programming_NN language,_NN to_TO be_VB accessible_JJ to_TO Java_NNPapplications._DT Many_JJ of_IN the_DT standard_JJ library_NN classes_NNS depend_VBP on_IN the_DT JNI_NNP to_TO provide_VB functionality_NN to_TOthe_DT developer_NN and_CC the_DT user,_NN e.g._FW I/O_FW file_NN reading_NN and_CC sound_NN capabilities._NN Including_VBG performance-_NNSand_CC platform-sensitive_JJ API_NNP implementations_NNS in_IN the_DT standard_JJ library_NN allows_VBZ all_DT Java_NNP applications_NNSto_TO access_NN this_DT functionality_NN in_IN a_DT safe_JJ and_CC platform-independent_JJ manner._NN Before_IN resorting_VBG to_TO using_VBGthe_DT JNI,_NNP developers_NNS should_MD make_VB sure_JJ the_DT functionality_NN is_VBZ not_RB already_RB provided_VBN in_IN the_DT standard_NNlibraries._NNThis_DT document_NN describes_VBZ a_DT process_NN for_IN the_DT semi-automatic_JJ as_RB well_RB as_IN automatic_JJ conversion_NN of_INnumerical_JJ and_CC scientific_JJ routines_NNS written_VBN in_IN the_DT C_NNP or_CC C++_NNP programming_NN language_NN into_IN Java_FWprogramming_VBG language._NN This_DT process_NN involves_VBZ development_NN of_IN JACAW_NNP (Java_NNP C_NNP Automatic_NNPWrapper),_NNP a_DT wrapper_NN tool_NN based_VBN on_IN the_DT Java_NNP Native_NNP Interface_NNP (JNI)_NNP that_WDT can_MD automatically_RBgenerate_VB the_DT Java_NNP interface_NN and_CC related_JJ files_NNS for_IN any_DT C_NNP routine,_NN or_CC library_NN of_IN C_NNP routines._.2._. Related_NNP Approaches_NNPSTwo_CD main_JJ approaches_NNS have_VBP been_VBN adopted_VBN in_IN applying_VBG Java_NNP to_TO Grid_NNP computing._.-_: if_IN the_DT number_NN of_IN the_DT legacy_JJ code_NN functions_NNS are_VBP very_RB high_JJ (of_IN thousands_NNS order)_IN the_DT available_JJtools_NNS for_IN handling_VBG services_NNS are_VBP not_RB facing_VBG the_DT requirements._NN-_: the_DT public_NN expose_VB of_IN all_PDT the_DT legacy_JJ code_NN functions_NNS can_MD be_VB a_DT danger_NN for_IN the_DT system_NN hosting_NN the_DTwrapped_VBN software_NN if_IN the_DT exposed_VBN function_NN list_NN includes_VBZ functions_NNS that_IN modify_VB the_DT host_NNenvironment._NNA_DT first_JJ class_NN of_IN techniques_NNS comprises_VBZ the_DT black-box_NN reengineering_VBG techniques_NNS which_WDT integrate_VBsystems_NNS via_IN adaptors_NNS that_IN wrap_NN legacy_NN code_NN as_IN a_DT service_NN (as_IN mentioned_VBN above)._IN A_DT second_JJ class_NNcomprises_VBZ white-box_JJ methods_NNS which_WDT require_VBP code_NN analysis_NN and_CC modification_NN in_IN order_NN to_TO obtain_VBthe_DT code_NN components_NNS of_IN the_DT system_NN to_TO be_VB presented_VBN as_IN services._DT Both_DT approaches_NNS are_VBP valid_JJ in_INdifferent_JJ circumstances,_NN depending_VBG on_IN factors_NNS such_JJ as_IN the_DT granularity_NN of_IN the_DT code,_NN the_DT assumed_VBNusers_NNS and_CC application_NN area._. The_DT first_JJ class_NN is_VBZ mainly_RB applied_VBN in_IN the_DT case_NN when_WRB the_DT code_NN is_VBZ not_RBavailable._DT Recent_JJ papers_NNS on_IN this_DT subject_NN are_VBP [15]_JJ and_CC [8]._VBZ A_DT solution_NN for_IN the_DT particular_JJ case_NN of_INinteractive_JJ legacy_NN systems_NNS is_VBZ described_VBN in_IN [13]._VBGJava_NNP wrapping_NN can_MD be_VB used_VBN to_TO generate_VB the_DT service_NN interfaces_NNS automatically_RB as_IN outlined_VBN in_IN [1,12]._VBGProminent_JJ examples_NNS in_IN this_DT direction_NN are_VBP JNL,_RB JAMA,_JJ SWIG,_NNP JACAW_NNP or_CC MEDLI_NNP [12]._VBD The_DTmost_RBS remarkable_JJ non-invasive_JJ solution_NN is_VBZ represented_VBN by_IN GEMLCA,_NNP the_DT Grid_NNP Execution_NNPManagement_NNP for_IN Legacy_NNP Code_NNP [15]._. A_DT drawback_NN is_VBZ that_IN it_PRP supposes_VBZ that_IN the_DT legacy_NN code_NN is_VBZactivated_VBN in_IN a_DT command-line_JJ style_NN and_CC does_VBZ not_RB exploit_VB the_DT possible_JJ successive_JJ interactions._NNS The_DTsame_JJ comment_NN is_VBZ valid_JJ also_RB for_IN O’SOAP_NNP [13]_NNP that_WDT also_RB allows_VBZ legacy_NN command-line_NN oriented_VBNapplications_NNS to_TO be_VB deployed_VBN as_IN Web_NNP services_NNS without_IN any_DT modification,_NN as_RB well_RB as_IN for_IN OPAL_NNP[14]._.International_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD127_CDThe_DT following_VBG two_CD main_JJ approaches_NNS have_VBP been_VBN adopted_VBN in_IN applying_VBG Java_NNP to_TO numerical_JJcomputing._NN In_IN the_DT first_JJ approach,_NN scientific_JJ packages_NNS previously_RB written_VBN in_IN C,_NNP C++,_NNP or_CCFORTRAN_NN are_VBP completely_RB rewritten_VBN in_IN Java._NNP Examples_NNS include_VBP commercial_JJ packages_NNS such_JJ as_INJNL_NNP from_IN Visual_JJ Numerics3,_NN and_CC packages_NNS from_IN research_NN projects_NNS such_JJ as_IN JAMA_NNP designed_VBN by_INJoe_NNP Hicklin,_NNP Cleve_NNP Moler,_NNP Peter_NNP Webb_NNP (2000)._.Work_NN on_IN the_DT Numerically_NNP Intensive_NNP Java_NNP (NINJA)_NNP supports_VBZ the_DT view_NN that_IN there_EX are_VBP no_UHfundamental_JJ technical_JJ reasons_NNS why_WRB Java_NNP should_MD not_RB be_VB used_VBN for_IN high_JJ performance_NN numerical_JJcomputing._NN NINJA_NNP uses_VBZ language_NN and_CC compiler_NN techniques_NNS to_TO address_VB Java_NNP performance_NNproblems,_NN and_CC this_DT type_NN of_IN approach_NN is_VBZ essential_JJ if_IN Java_NNP is_VBZ to_TO be_VB adopted_VBN throughout_IN the_DT high_JJperformance_NN computing_NN community._.In_IN the_DT second_JJ approach,_NN legacy_NN packages_NNS are_VBP retained_VBN and_CC JNI_NNP is_VBZ used_VBN to_TO integrate_VB native_JJmethods_NNS (e.g.,_JJ C_NNP code)_NN with_IN Java._NNP This_DT may_MD not_RB always_RB be_VB an_DT optimal_JJ or_CC elegant_JJ solution,_NN but_CC it_PRPis_VBZ necessary_JJ when_WRB large_JJ scientific_JJ libraries_NNS are_VBP not_RB immediately_RB available_JJ in_IN Java._NNP Wrapping_.legacy_JJ C_NNP code_NN can_MD also_RB result_VB in_IN better_JJR performance_NN than_IN pure_JJ Java_NNP code,_NN though_IN this_DT benefit_NN will_MDpresumably_RB diminish_JJ as_IN a_DT variety_NN of_IN compiler_NN and_CC runtime_NN techniques_NNS continue_VBP to_TO close_VB the_DTperformance_NN gap_NN between_IN C_NNP and_CC Java_NNP code._.Examples_NNS of_IN the_DT wrapping_NN approach_NN include_VBP a_DT Java_NNP interface_NN to_TO MPI_NNP [3]_NNP and_CC openSSL_NNP [5]._VBD The_DTJanet_NNP [2]_VBD (JAva_NNP Native_NNP ExTensions)_NNP project_NN makes_VBZ use_NN of_IN Java_NNP language_NN extensions_NNS and_CC a_DTpreprocessing_VBG tool_NN to_TO develop_VB Java_NNP interfaces_NNS to_TO native_JJ code_NN by_IN automatically_RB generating_VBG JNI_RBcode._NN Santa_NNP Fe_NNP (2000)_IN describes_VBZ a_DT new_JJ transformation_NN called_VBD alias_RB versioning_NN that_IN takes_VBZadvantage_NN of_IN the_DT simplicity_NN of_IN pointers_NNS in_IN Java._NNP This_DT transformation,_NN combined_VBN with_IN other_JJtechniques_NNS that_IN we_PRP have_VBP developed,_VBN enables_VBZ the_DT compiler_NN to_TO perform_VB high_JJ order_NN loop_NNtransformations_NNS (for_IN better_JJR data_NNS locality)_NNS and_CC parallelization_NN completely_RB automatically._'' This_DTcompiler_NN is_VBZ the_DT first_JJ to_TO have_VB such_JJ capabilities_NNS of_IN optimizing_VBG numerical_JJ Java_NNP codes._.This_DT approach_NN requires_VBZ the_DT source_NN code,_NN but_CC this_DT has_VBZ the_DT advantage_NN of_IN allowing_VBG a_DT high_JJ degree_NN of_INcontrol_NN over_IN the_DT low-level_JJ behaviour_NN of_IN the_DT native_JJ code._NN The_DT Jaguar_NNP project_NN developed_VBN by_INJohannes_NNP Gehrke_NNP and_CC Philippe_NNP Bonnet_NNP (2001)_NNP avoids_VBZ the_DT use_NN of_IN JNI_NNP in_IN accessing_VBG native_JJ code_NN by_INextending_VBG the_DT Java_NNP runtime_NN environment_NN to_TO enable_VB direct_JJ Java_NNP access_NN to_TO operating_VBG system_NN and_CChardware_NN resources._NN This_DT avoids_VBZ the_DT need_NN to_TO copy_VB data_NNS between_IN the_DT Java_NNP and_CC native_JJ code,_NN and_CCleads_VBZ to_TO efficient_JJ code,_NN but_CC the_DT approach_NN is_VBZ architecture_NN specific._.Simplified_NNP Wrapper_NNP Interface_NNP Generator_NNP (SWIG)_NNP developed_VBD by_IN Dave_NNP (1995)_CC connects_VBZ programs_NNSwritten_VBN in_IN C_NNP (and_CC C++)_NNP with_IN a_DT variety_NN of_IN high-level_JJ programming_NN languages_NNS (including_VBG Java)._NNP It_PRPprocesses_NNS an_DT interface_NN file_NN that_IN defines_NNS all_DT of_IN the_DT variables_NNS and_CC functions_NNS that_WDT need_VBP to_TO be_VB accessed_VBNfrom_IN Java_NNP (or_IN any_DT other_JJ language),_NN and_CC generates_VBZ the_DT JNI_NNP interface_NN to_TO the_DT C_NNP code_NN for_IN Java._NNPHowever,_RB SWIG_NNP is_VBZ not_RB completely_RB automatic_JJ (the_IN interface_NN file_NN needs_VBZ to_TO be_VB written)_VBN and_CCfurthermore,_RB sufficient_JJ knowledge_NN of_IN variables_NNS and_CC functions_NNS may_MD not_RB possible_RB without_IN the_DTsource_NN code_NN (which_WDT is_VBZ often_RB not_RB available)._JJ In_IN April_NNP 7,_CD 2008._. SWIG-1.3.35_'' released._VBN2.1_CD Proposed_NNP Approach_NNPAny_DT Legacy_NNP system_NN has_VBZ the_DT following_VBG characteristics:_NN•_NN Legacy_NNP systems_NNS have_VBP some_DT reusable_JJ and_CC reliable_JJ functionality_NN embedded_VBN with_IN valuable_JJbusiness_NN logic;_NNS•_NNS The_DT functionalities_NNS within_IN legacy_JJ components_NNS are_VBP meaningful_JJ and_CC more_RBR powerful_JJ to_TO be_VBexposed_VBN in_IN Grid_NNP environment_NN from_IN the_DT requirements_NNS point_NN of_IN view;_NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD128_CD•_JJ Reusable_JJ components_NNS extracted_VBN from_IN a_DT legacy_NN system_NN are_VBP fairly_RB maintainable_JJ compared_VBN to_TOmaintain_VB the_DT whole_JJ legacy_NN system;_NN•_JJ Some_DT components_NNS of_IN the_DT target_NN system_NN run_VBP on_IN different_JJ platforms_NNS or_CC vendor_NN products._.The_DT aim_NN of_IN this_DT approach_NN is_VBZ to_TO reuse_VB recovered_VBN legacy_JJ components_NNS in_IN a_DT framework._NN Firstly,_RB an_DTevaluation_NN of_IN legacy_NN systems_NNS is_VBZ performed_VBN to_TO confirm_VB the_DT applicability_NN of_IN this_DT approach._NNSecondly,_RB the_DT legacy_NN system_NN is_VBZ decomposed_VBN into_IN component_NN candidates_NNS via_IN hierarchical_NNclustering_NN techniques,_NN which_WDT are_VBP the_DT essential_JJ techniques_NNS used_VBN in_IN component_NN mining_NN in_IN our_PRP$approach._NN Then_RB static_JJ program_NN slicing_NN techniques_NNS are_VBP applied_VBN to_TO further_RB understand_VB these_DTcomponent_NN candidates._MD Reverse_VB engineering_NN techniques_NNS play_VBP an_DT important_JJ role_NN in_IN this_DT analysis_NNprocess._NN Based_VBN on_IN the_DT comprehension,_NN these_DT component_NN candidates_NNS are_VBP extracted_VBN as_IN concerned_VBNlegacy_NN code_NN segments._NN In_IN order_NN to_TO be_VB reused_VBN as_IN components,_NN the_DT extracted_VBN legacy_NN code_NN is_VBZ refined_VBNand_CC encapsulated_VBD mainly_RB through_IN JNI_NNP (Java_NNP Native_NNP Interfaces)._NNP After_IN these_DT legacy_JJ components_NNSare_VBP created,_NNS they_PRP will_MD be_VB integrated_VBN in_IN a_DT framework_NN as_IN a_DT set_NN of_IN software_NN resource_NN services,_NNS which_WDTmay_MD be_VB composed_VBN together_RB to_TO form_VB a_DT grid_NN application._NN3._DT Legacy_NNP Code_NNP Generator_NNPThe_DT command_NN line_NN description_NN has_VBZ to_TO be_VB complete_JJ enough_RB to_TO allow_VB dynamic_JJ composition_NN of_IN the_DTcommand_NN line_NN from_IN the_DT list_NN of_IN parameters_NNS at_IN the_DT service_NN invocation_NN time_NN and_CC to_TO access_VB the_DTexecutable_JJ and_CC input_NN data_NNS files._, High_NNP performance_NN legacy_NN codes_NNS are_VBP pre-existing_JJ codes,_NN mostly_RB in_INC_NNP or_CC FORTRAN,_JJ that_IN possess_VBP the_DT following_JJ features:_NNS (1)_VBP they_PRP are_VBP domain_NN specific;_NNS (2)_IN they_PRP are_VBPhard_JJ to_TO re-use_VB in_IN other_JJ applications;_NN (3)_IN they_PRP are_VBP still_RB useful;_JJ and,_NNS (4)_IN they_PRP are_VBP often_RB large._.3.1_CD The_DT Implementation_NN of_IN the_DT Wrapper_NNP Generator_NNPAutomatic_NNP Wrapper_NNP Generator_NNP Native_NNP Libraries_NNP (AWGNL)_NNP can_MD be_VB used_VBN to_TO wrap_VB existing_VBG legacy_NNcode_NN in_IN C_NNP as_IN a_DT Java_NNP code_NN that_WDT calls_VBZ the_DT original_JJ code_NN through_IN the_DT Java_NNP Native_NNP Interface._NNP AWGNL_.can_MD be_VB applied_VBN automatically_RB to_TO wrap_VB entire_JJ software_NN libraries_NNS thereby_RB saving_VBG time_NN and_CCsubstantially_RB reducing_VBG the_DT likelihood_NN of_IN introducing_VBG coding_NN errors._, AWGNL_NNP is_VBZ based_VBN on_IN the_DT Java_NNPNative_NNP Interface_NNP (JNI)_NNP [6],_IN which_WDT is_VBZ an_DT API_NN that_WDT allows_VBZ Java_NNP code_NN to_TO interact_VB with_IN code_NN written_VBN in_INanother_DT language._NNAWGNL_NNP shields_NNS the_DT user_NN from_IN the_DT details_NNS of_IN JNI,_NNP and_CC does_VBZ not_RB require_VB the_DT user_NN to_TO have_VB any_DTknowledge_NN of_IN how_WRB to_TO use_VB it._DT AWGNL_NNP takes_VBZ the_DT C_NNP header_NN files_NNS as_IN input_NN and_CC automatically_RB creates_VBZthe_DT corresponding_JJ Java_NNP and_CC C_NNP files_NNS needed_VBD to_TO make_VB native_JJ calls._NN AWGNL_NNP also_RB automatically_RBcompiles_NNS the_DT Java_NNP files,_NN creates_VBZ the_DT header_NN files,_NN and_CC builds_VBZ a_DT shared_VBN library_NN of_IN the_DT JNI-enabled_JJ C_NNProutines._.Legacy_NNP Code_NNP Wrapper_NNP Generator_NNP facilitates_VBZ the_DT automatic_JJ incorporation_NN of_IN a_DT wide_JJ range_NN of_INexisting_VBG legacy_NN codes._. When_WRB using_VBG it,_RB developers_NNS only_RB need_VBP to_TO specify_VB the_DT parameters_NNS(properties)_NN of_IN the_DT legacy_NN code_NN they_PRP want_VBP to_TO wrap,_VB then_RB submit_VB the_DT parameters_NNS to_TO WG_NNP which_WDT then_RBgenerates_VBZ all_PDT the_DT interfaces_NNS needed_VBD to_TO convert_VB the_DT legacy_JJ code_NN into_IN a_DT component._NN3.2_CD Wrapper_NNP Generator_NNP Data_NNP Flow_NNPInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD129_CDWrapper_NNP generator_NN facilitates_VBZ the_DT automatic_JJ incorporation_NN of_IN a_DT wide_JJ range_NN of_IN existing_VBG legacy_NNcodes._. When_WRB using_VBG it,_RB developers_NNS only_RB need_VBP to_TO specify_VB the_DT parameters_NNS (properties)_NN of_IN the_DT legacy_NNcode_NN they_PRP want_VBP to_TO wrap,_VB then_RB submit_VB the_DT parameters_NNS to_TO WG_NNP which_WDT then_RB generates_VBZ all_PDT the_DTinterfaces_NNS needed_VBD to_TO convert_VB the_DT legacy_JJ code_NN into_IN a_DT component._NN The_DT interfaces_NNS include_VBP a_DT IDL_NNinterface,_NN an_DT XML_NNP definition,_, an_DT implementation_NN code_NN (Body),_IN a_DT Listener_NN and_CC a_DT Publisher._NNP The_NNPListener_NN and_CC Publisher_NN are_VBP used_VBN to_TO interact_VB with_IN other_JJ components._NN Figure_NN 1_CD shows_VBZ the_DT data_NNS flow_NNin_IN the_DT Wrapper_NNP generator._.Developers_NNS are_VBP diﬀerent_NN from_IN end_NN users_NNS in_IN that_DT developers_NNS create_VBP components,_NN whereas_IN end_NNusers_NNS make_VBP use_NN of_IN the_DT components_NNS to_TO construct_VB applications._DT Developers_NNS need_VBP to_TO know_VB some_DTinformation_NN about_IN the_DT legacy_NN code,_NN such_JJ as_IN its_PRP$ input(s)/output(s)._NN However,_IN they_PRP do_VBP not_RB need_VB to_TOknow_VB the_DT exact_JJ implementation_NN of_IN the_DT legacy_NN code._VBZ The_DT main_JJ constraints_NNS of_IN a_DT legacy_NN code_NN that_WDTcan_MD be_VB wrapped_VBN as_IN a_DT component_NN with_IN the_DT WG_NNP are:_.•_NNS The_DT legacy_NN code_NN can_MD be_VB a_DT sequential_JJ code_NN or_CC a_DT parallel_JJ code_NN using_VBG MPI._NNP•_NNS The_DT legacy_NN code_NN can_MD be_VB written_VBN in_IN C,_NNP Fortran_NNP or_CC Java._NNP•_NNS The_DT legacy_NN code_NN can_MD be_VB located_VBN anywhere_RB within_IN a_DT distributed_VBN computing_NN network._.•_NNS The_DT legacy_NN code_NN must_MD be_VB a_DT binary_JJ code_NN and_CC can_MD perform_VB certain_JJ functions_NNS with_IN some_DTinput(s)/output(s)._NNFigure_NN 1._VBZ The_DT Wrapper_NNP generator_NN data_NNS flow_NN3.3_CD Data_NNP Mediation_NNP Interface_NNPThe_DT data_NNS mediation_NN interface_NN automates_VBZ the_DT process_NN of_IN mediating_VBG the_DT data_NNS types_NNS between_IN the_DT Java_NNPclasses_NNS and_CC the_DT C_NNP function_NN calls._'' This_DT is_VBZ accomplished_VBN by_IN providing_VBG a_DT graphical_JJ user_NN interface_NN(GUI)_NN that_IN takes_VBZ the_DT user_NN through_IN a_DT set_NN of_IN steps_NNS to_TO select_VB the_DT parameters_NNS for_IN the_DT wrapped_VBN function_NNfrom_IN an_DT input_NN class_NN and_CC then_RB to_TO initialize_VB and_CC set_VB the_DT data_NNS for_IN the_DT output_NN class._VBD The_DT use_NN of_IN Data_NNPMediation_NNP Interface_NNP is_VBZ divided_VBN into_IN three_CD phases:_NNS•_NN DMI_NNP displays_VBZ the_DT instance_NN variables_NNS of_IN the_DT classes_NNS in_IN the_DT arguments_NNS passed_VBD to_TO the_DT target_NNroutine._DT The_DT user_NN then_RB graphically_RB maps_NNS some_DT or_CC all_DT of_IN these_DT variables_NNS to_TO the_DT instance_NNvariables_NNS of_IN a_DT selected_VBN Java_NNP class_NN through_IN its_PRP$ get_VBP and_CC set_VBN methods,_NNS thereby_RB creating_VBG a_DT port_NNfor_IN the_DT target_NN routine._'' This_DT process_NN of_IN port_NN creation_NN is_VBZ repeated_VBN until_IN all_DT instance_NNvariables_NNS passed_VBD through_IN the_DT target_NN routine_JJ arguments_NNS have_VBP been_VBN mapped_VBN to_TO a_DT port._NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP•_RB Next_IN the_DT user_NN mediates_VBZ the_DT data_NNS returned_VBD from_IN the_DT target_NN function_NN to_TO one_CD or_CC more_JJR Java_FWoutput_NN classes,_NNS thereby_RB creating_VBG one_CD or_CC more_JJR output_NN port(s)._NN Thi_NNPto_TO the_DT mapping_NN of_IN the_DT instance_NN variables_NNS of_IN the_DT target_NN routine_NN arguments._.•_NN Finally,_IN the_DT user_NN mediates_VBZ any_DT other_JJ data_NNS between_IN the_DT input_NN Java_NNP class_NN and_CC the_DT output_NNJava_NNP class_NN (es)_NN in_IN phase_NN 2._'' This_DT is_VBZ data_NNS that_WDT is_VBZ not_RB needed_VBN by_IN the_DTis_VBZ not_RB passed_VBN to_TO it_PRP in_IN its_PRP$ arguments,_NN but_CC which_WDT is_VBZ needed_VBN in_IN the_DT output_NN port(s)_NNS created_VBN in_INprevious_JJ phase._NN4._DT Role_NNP of_IN Java_NNP Native_NNP Interface_NNPWhen_WRB the_DT Java_NNP platform_NN is_VBZ deployed_VBN on_IN top_NN of_IN host_NN environments,_NN it_PRP may_MD become_VB desirable_JJ or_CCnecessary_JJ to_TO allow_VB Java_NNP applications_NNS to_TO work_VB closely_RB with_IN native_JJ code_NN written_VBN in_IN other_JJlanguages._NN Programmers_NNS have_VBP begun_VBN to_TO adopt_VB the_DT Java_NNP platform_NN to_TO build_VB applicat_NNtraditionally_RB written_VBN in_IN C_NNP and_CC C++._NNP The_DT JNI_NNP is_VBZ a_DT powerful_JJ feature_NN that_WDT allows_VBZ you_PRP to_TO take_VBadvantage_NN of_IN the_DT Java_NNP platform,_NN but_CC still_RB utilize_VB code_NN written_VBN in_IN other_JJ languages._NN As_IN a_DT part_NN of_IN the_DTJava_NNP virtual_JJ machine_NN implementation,_IN the_DT JNI_NNP is_VBZ a_DTapplications_NNS to_TO invoke_VB native_JJ code_NN and_CC vice_NN versa._NN Fig_.The_DT JNI_NNP is_VBZ designed_VBN to_TO handle_VB situations_NNS where_WRB you_PRP need_VBP to_TO combine_VB Java_NNP applications_NNS with_INnative_JJ code._NN As_IN a_DT two-way_JJ interface,_NN the_DT JNI_NNP can_MD support_VB two_CD types_NNS of_IN native_JJ code:_NN native_NNlibraries_NNS and_CC native_JJ applications._.•_NN Use_VB the_DT JNI_NNP to_TO write_VB native_JJ methods_NNSimplemented_VBN in_IN native_JJ libraries._NN Java_NNP applications_NNS call_VBP native_JJ methods_NNS in_IN the_DT same_JJ way_NNthat_IN they_PRP call_VBP methods_NNS implemented_VBN in_IN the_DT Java_NNP programming_NN language._NN Behind_IN the_DTscenes,_NN however,_VBP native_JJ methods_NNS are_VBP implemented_VBNnative_JJ libraries._NN•_JJ The_DT JNI_NN supports_VBZ an_DT invocation_NN interface_NNmachine_NN implementation_NN into_IN native_JJ applications._NN Native_NN applications_NNS can_MD link_VB with_IN a_DTnative_JJ library_NN that_WDT implements_VBZ the_DT Java_NNP virtual_JJ machine,_NN and_CC then_RB use_VB the_DT invocation_NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNPNext_IN the_DT user_NN mediates_VBZ the_DT data_NNS returned_VBD from_IN the_DT target_NN function_NN to_TO one_CD or_CC more_JJR Java_FWoutput_NN classes,_NNS thereby_RB creating_VBG one_CD or_CC more_JJR output_NN port(s)._'' This_DT process_NN is_VBZ very_RB similar_JJto_TO the_DT mapping_NN of_IN the_DT instance_NN variables_NNS of_IN the_DT target_NN routine_NN arguments._.Finally,_IN the_DT user_NN mediates_VBZ any_DT other_JJ data_NNS between_IN the_DT input_NN Java_NNP class_NN and_CC the_DT output_NN(es)_NN in_IN phase_NN 2._'' This_DT is_VBZ data_NNS that_WDT is_VBZ not_RB needed_VBN by_IN the_DT target_NN routine,_NN and_CC hence_RBis_VBZ not_RB passed_VBN to_TO it_PRP in_IN its_PRP$ arguments,_NN but_CC which_WDT is_VBZ needed_VBN in_IN the_DT output_NN port(s)_NNS created_VBN in_INnterface_NNWhen_WRB the_DT Java_NNP platform_NN is_VBZ deployed_VBN on_IN top_NN of_IN host_NN environments,_NN it_PRP may_MD become_VB desirable_JJ or_CCnecessary_JJ to_TO allow_VB Java_NNP applications_NNS to_TO work_VB closely_RB with_IN native_JJ code_NN written_VBN in_IN other_JJlanguages._NN Programmers_NNS have_VBP begun_VBN to_TO adopt_VB the_DT Java_NNP platform_NN to_TO build_VB applications_NNS that_WDT were_VBDtraditionally_RB written_VBN in_IN C_NNP and_CC C++._NNP The_DT JNI_NNP is_VBZ a_DT powerful_JJ feature_NN that_WDT allows_VBZ you_PRP to_TO take_VBadvantage_NN of_IN the_DT Java_NNP platform,_NN but_CC still_RB utilize_VB code_NN written_VBN in_IN other_JJ languages._NN As_IN a_DT part_NN of_IN the_DTJava_NNP virtual_JJ machine_NN implementation,_IN the_DT JNI_NNP is_VBZ a_DT two-way_JJ interface_NN that_WDT allows_VBZ Java_NNPapplications_NNS to_TO invoke_VB native_JJ code_NN and_CC vice_NN versa._NN Figure_NN 2_CD illustrates_VBZ the_DT role_NN of_IN the_DT JNI._NNPFigure_NN 2._VBD Role_NNP of_IN JNI_NNPThe_DT JNI_NNP is_VBZ designed_VBN to_TO handle_VB situations_NNS where_WRB you_PRP need_VBP to_TO combine_VB Java_NNP applications_NNS with_INway_NN interface,_, the_DT JNI_NNP can_MD support_VB two_CD types_NNS of_IN native_JJ code:_NN native_NNnative_JJ methods_NNS that_WDT allow_VBP Java_NNP applications_NNS to_TO call_VB functions_NNSimplemented_VBN in_IN native_JJ libraries._NN Java_NNP applications_NNS call_VBP native_JJ methods_NNS in_IN the_DT same_JJ way_NNthat_IN they_PRP call_VBP methods_NNS implemented_VBN in_IN the_DT Java_NNP programming_NN language._NN Behind_IN the_DTscenes,_NN however,_VBP native_JJ methods_NNS are_VBP implemented_VBN in_IN another_DT language_NN and_CC reside_NN in_INinvocation_NN interface_NN that_WDT allows_VBZ you_PRP to_TO embed_VB a_DT Java_NNP virtual_JJmachine_NN implementation_NN into_IN native_JJ applications._NN Native_NN applications_NNS can_MD link_VB with_IN a_DTnative_JJ library_NN that_WDT implements_VBZ the_DT Java_NNP virtual_JJ machine,_NN and_CC then_RB use_VB the_DT invocation_NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD130_CDNext_IN the_DT user_NN mediates_VBZ the_DT data_NNS returned_VBD from_IN the_DT target_NN function_NN to_TO one_CD or_CC more_JJR Java_FWs_PRP process_NN is_VBZ very_RB similar_JJFinally,_IN the_DT user_NN mediates_VBZ any_DT other_JJ data_NNS between_IN the_DT input_NN Java_NNP class_NN and_CC the_DT output_NNtarget_NN routine,_NN and_CC hence_RBis_VBZ not_RB passed_VBN to_TO it_PRP in_IN its_PRP$ arguments,_NN but_CC which_WDT is_VBZ needed_VBN in_IN the_DT output_NN port(s)_NNS created_VBN in_INWhen_WRB the_DT Java_NNP platform_NN is_VBZ deployed_VBN on_IN top_NN of_IN host_NN environments,_NN it_PRP may_MD become_VB desirable_JJ or_CCnecessary_JJ to_TO allow_VB Java_NNP applications_NNS to_TO work_VB closely_RB with_IN native_JJ code_NN written_VBN in_IN other_JJions_NNS that_WDT were_VBDtraditionally_RB written_VBN in_IN C_NNP and_CC C++._NNP The_DT JNI_NNP is_VBZ a_DT powerful_JJ feature_NN that_WDT allows_VBZ you_PRP to_TO take_VBadvantage_NN of_IN the_DT Java_NNP platform,_NN but_CC still_RB utilize_VB code_NN written_VBN in_IN other_JJ languages._NN As_IN a_DT part_NN of_IN the_DTinterface_NN that_WDT allows_VBZ Java_NNPillustrates_VBZ the_DT role_NN of_IN the_DT JNI._NNPThe_DT JNI_NNP is_VBZ designed_VBN to_TO handle_VB situations_NNS where_WRB you_PRP need_VBP to_TO combine_VB Java_NNP applications_NNS with_INway_NN interface,_, the_DT JNI_NNP can_MD support_VB two_CD types_NNS of_IN native_JJ code:_NN native_NNallow_VB Java_NNP applications_NNS to_TO call_VB functions_NNSimplemented_VBN in_IN native_JJ libraries._NN Java_NNP applications_NNS call_VBP native_JJ methods_NNS in_IN the_DT same_JJ way_NNthat_IN they_PRP call_VBP methods_NNS implemented_VBN in_IN the_DT Java_NNP programming_NN language._NN Behind_IN the_DTin_IN another_DT language_NN and_CC reside_NN in_INthat_DT allows_VBZ you_PRP to_TO embed_VB a_DT Java_NNP virtual_JJmachine_NN implementation_NN into_IN native_JJ applications._NN Native_NN applications_NNS can_MD link_VB with_IN a_DTnative_JJ library_NN that_WDT implements_VBZ the_DT Java_NNP virtual_JJ machine,_NN and_CC then_RB use_VB the_DT invocation_NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD131_CDinterface_NN to_TO execute_VB software_NN components_NNS written_VBN in_IN the_DT Java_NNP programming_NN language._.For_IN example,_NN a_DT web_NN browser_NN written_VBN in_IN C_NNP can_MD execute_VB downloaded_JJ applets_NNS in_IN an_DTembedded_VBN Java_NNP virtual_JJ machine_NN implementation._NNThere_EX is_VBZ a_DT simple_JJ example_NN of_IN using_VBG the_DT Java_NNP Native_NNP Interface._NNP We_PRP will_MD write_VB a_DT Java_NNP application_NNthat_WDT calls_VBZ a_DT C_NNP function_NN to_TO print_NN “Hello_NNP World!”_NNP The_DT process_NN consists_VBZ of_IN the_DT following_VBG steps:_NN•_NN Create_VBZ a_DT class_NN (HelloWorld.java)_NN that_IN declares_VBZ the_DT native_JJ method._NN•_JJ Use_NNP javac_NN to_TO compile_VB the_DT HelloWorld_NNP source_NN file,_NN resulting_VBG in_IN the_DT class_NN file_NNHelloWorld.class._NNP The_DT javac_NN compiler_NN is_VBZ supplied_VBN with_IN JDK_NNP or_CC Java_NNP 2_CD SDK_NNP releases._.•_NN Use_NNP javah_NNP -jni_NNP to_TO generate_VB a_DT C_NNP header_NN file_NN (HelloWorld.h)_NNS containing_VBG the_DT function_NNprototype_NN for_IN the_DT native_JJ method_NN implementation._VBZ The_DT javah_JJ tool_NN is_VBZ provided_VBN with_IN JDK_NNP or_CCJava_NNP 2_CD SDK_NNP releases._.•_NN Write_VBZ the_DT C_NNP implementation_NN (HelloWorld.c)_NNS of_IN the_DT native_JJ method._NN•_NN Compile_IN the_DT C_NNP implementation_NN into_IN a_DT native_JJ library,_NN creating_VBG HelloWorld.dll_NNP or_CClibHelloWorld.so._NN Use_VB the_DT C_NNP compiler_NN and_CC linker_NN available_JJ on_IN the_DT host_NN environment._NN•_NN Run_VB the_DT HelloWorld_NNP program_NN using_VBG the_DT java_NN runtime_NN interpreter._, Both_DT the_DT class_NN files_NNS(HelloWorld.class)_NN and_CC the_DT native_JJ library_NN (HelloWorld.dll_NN or_CC libHelloWorld.so)_NN are_VBPloaded_VBN at_IN runtime._VBGWrapper_NNP Generator_NNP shields_VBZ the_DT user_NN from_IN the_DT details_NNS of_IN JNI,_NNP and_CC does_VBZ not_RB require_VB the_DT user_NN to_TO have_VBany_DT knowledge_NN of_IN how_WRB to_TO use_VB it._DT JACAW_NNP takes_VBZ the_DT C_NNP header_NN files_NNS as_IN input_NN and_CC automatically_RBcreates_VBZ the_DT corresponding_JJ Java_NNP and_CC C_NNP files_NNS needed_VBD to_TO make_VB native_JJ calls._NN JACAW_NNP also_RBautomatically_RB compiles_VBZ the_DT Java_NNP files,_NN creates_VBZ the_DT header_NN files,_NN and_CC builds_VBZ a_DT shared_VBN library_NN of_IN the_DTJNI-enabled_JJ C_NNP routines._, Following_VBG example_NN shows_NNS of_IN what_WP Wrapper_NNP Generator_NNP does._.4.1_CD Declare_NNP the_DT Native_NNP Method_NNPSYou_PRP begin_VBP by_IN writing_VBG the_DT following_VBG program_NN in_IN the_DT Java_NNP programming_NN language._VBD The_DT program_NNdefines_NNS a_DT class_NN named_VBN HelloWorld_NNP that_WDT contains_VBZ a_DT native_JJ method_NN print._NNclass_NN HelloWorld_NNP {_.private_JJ native_JJ void_NN print();_NNpublic_JJ static_JJ void_NN main(String[]_NN args)_NN {_.new_JJ HelloWorld().print();_NNP}_NNstatic_JJ {_NNSystem.loadLibrary_JJ ("HelloWorld");_NN}_NN}_NNThe_DT HelloWorld_NNP class_NN definition_NN begins_VBZ with_IN the_DT declaration_NN of_IN the_DT print_NN native_JJ method._NN This_DT is_VBZfollowed_VBN by_IN a_DT main_JJ method_NN that_IN instantiates_NNS the_DT HelloWorld_NNP class_NN and_CC invokes_VBZ the_DT print_NN native_NNmethod_NN for_IN this_DT instance._NN The_DT last_JJ part_NN of_IN the_DT class_NN definition_NN is_VBZ a_DT static_JJ initializer_NN that_WDT loads_VBZ the_DTnative_JJ library_NN containing_VBG the_DT implementation_NN of_IN the_DT print_NN native_NN method._.There_EX are_VBP two_CD differences_NNS between_IN the_DT declaration_NN of_IN a_DT native_JJ method_NN such_JJ as_IN print_NN and_CC the_DTdeclaration_NN of_IN regular_JJ methods_NNS in_IN the_DT Java_NNP programming_NN language._NN A_DT native_JJ method_NN declaration_NNmust_MD contain_VB the_DT native_JJ modifier._, The_DT native_JJ modifier_NN indicates_VBZ that_IN this_DT method_NN is_VBZ implemented_VBNin_IN another_DT language._NN Also,_IN the_DT native_JJ method_NN declaration_NN is_VBZ terminated_VBN with_IN a_DT semicolon,_NN the_DTstatement_NN terminator_NN symbol,_NN because_IN there_EX is_VBZ no_DT implementation_NN for_IN native_JJ methods_NNS in_IN the_DT class_NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD132_CDitself._PRP We_PRP will_MD implement_VB the_DT print_NN method_NN in_IN a_DT separate_JJ C_NNP file._NN Before_IN the_DT native_JJ method_NN print_NNcan_MD be_VB called,_VBN the_DT native_JJ library_NN that_IN implements_NNS print_NN must_MD be_VB loaded._VBN In_IN this_DT case,_NN we_PRP load_NN the_DTnative_JJ library_NN in_IN the_DT static_JJ initializer_NN of_IN the_DT HelloWorld_NNP class._.The_DT Java_NNP virtual_JJ machine_NN automatically_RB runs_VBZ the_DT static_JJ initializer_NN before_IN invoking_VBG any_DT methods_NNS in_INthe_DT HelloWorld_NNP class,_NN thus_RB ensuring_VBG that_IN the_DT native_JJ library_NN is_VBZ loaded_VBN before_IN the_DT print_NN native_NNmethod_NN is_VBZ called._VBN We_PRP define_VB a_DT main_JJ method_NN to_TO be_VB able_JJ to_TO run_VB the_DT HelloWorld_NNP class._NN HelloWorld_.main_JJ calls_VBZ the_DT native_JJ method_NN print_NN in_IN the_DT same_JJ manner_NN as_IN it_PRP would_MD call_VB a_DT regular_JJ method._NNSystem.loadLibrary_NNP takes_VBZ a_DT library_NN name,_NN locates_VBZ a_DT native_JJ library_NN that_IN corresponds_NNS to_TO that_DT name,_NNand_CC loads_NNS the_DT native_JJ library_NN into_IN the_DT application._NN We_PRP will_MD discuss_VB the_DT exact_JJ loading_NN process_NN later_RBin_IN the_DT book._NN For_IN now_RB simply_RB remember_VB that_IN in_IN order_NN for_IN System.loadLibrary_JJ ("HelloWorld")_NN to_TOsucceed,_NN we_PRP need_VBP to_TO create_VB a_DT native_JJ library_NN called_VBD HelloWorld.dll_NNP on_IN Win32,_NNP or_CClibHelloWorld.so_RB on_IN Solaris._NNP4.2_CD Compile_IN the_DT HelloWorld_NNP Class_NNAfter_IN you_PRP have_VBP defined_VBN the_DT HelloWorld_NNP class,_NN save_IN the_DT source_NN code_NN in_IN a_DT file_NN called_VBNHelloWorld.java._NNP Then_RB compile_VB the_DT source_NN file_NN using_VBG the_DT javac_NN compiler_NN that_WDT comes_VBZ with_IN the_DTJDK_NNP or_CC Java_NNP 2_CD SDK_NNP release:_NNjavac_NN HelloWorld.java_NNPThis_DT command_NN will_MD generate_VB a_DT HelloWorld.class_NNP file_NN in_IN the_DT current_JJ directory._NN4.3_CD Create_VBZ the_DT Native_NNP Method_NNP Header_NNP File_NNPNext_IN we_PRP will_MD use_VB the_DT javah_NN tool_NN to_TO generate_VB a_DT JNI-style_JJ header_NN file_NN that_WDT is_VBZ useful_JJ when_WRBimplementing_VBG the_DT native_JJ method_NN in_IN C._NNP You_PRP can_MD run_VB javah_NN on_IN the_DT HelloWorld_NNP class_NN as_IN follows:_VBGjavah_NN -jni_NNP HelloWorld_NNPThe_DT name_NN of_IN the_DT header_NN file_NN is_VBZ the_DT class_NN name_NN with_IN a_DT “.h”_NN appended_VBD to_TO the_DT end_NN of_IN it._PRP The_DTcommand_NN shown_VBN above_IN generates_VBZ a_DT file_NN named_VBN HelloWorld.h._NNP We_PRP will_MD not_RB list_VB the_DT generated_VBNheader_NN file_NN in_IN its_PRP$ entirety_NN here._, The_DT most_RBS important_JJ part_NN of_IN the_DT header_NN file_NN is_VBZ the_DT function_NNprototype_NN for_IN Java_HelloWorld_print,_NNP which_WDT is_VBZ the_DT C_NNP function_NN that_WDT implements_VBZ the_DTHelloWorld.print_NNP method:_NNJNIEXPORT_NNP void_NN JNICALL_NNJava_HelloWorld_print_NNP (JNIEnv_NNP *,_NNP jobject);_NNIgnore_VB the_DT JNIEXPORT_NNP and_CC JNICALL_NNP macros_NNS for_IN now._DT You_PRP may_MD have_VB noticed_VBN that_IN the_DT C_NNPimplementation_NN of_IN the_DT native_JJ method_NN accepts_VBZ two_CD arguments_NNS even_RB though_IN the_DT corresponding_JJdeclaration_NN of_IN the_DT native_JJ method_NN accepts_VBZ no_DT arguments._NN The_DT first_JJ argument_NN for_IN every_DT native_NNmethod_NN implementation_NN is_VBZ a_DT JNIEnv_NNP interface_NN pointer._VBZ The_DT second_JJ argument_NN is_VBZ a_DT reference_NN to_TO the_DTHelloWorld_NNP object_NN itself_PRP (sort_NN of_IN like_IN the_DT “this”_NN pointer_NN in_IN C++)._NNP We_PRP will_MD discuss_VB how_WRB to_TO use_VB the_DTJNIEnv_NNP interface_NN pointer_NN and_CC the_DT jobject_JJ arguments_NNS later_RB in_IN this_DT book,_NN but_CC this_DT simple_JJ example_NNignores_VBZ both_DT arguments._JJSInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD133_CD4.4_CD Write_NNP the_DT Native_NNP Method_NNP Implementation_NNThe_DT JNI-style_JJ header_NN file_NN generated_VBN by_IN javah_NN helps_VBZ you_PRP to_TO write_VB C_NNP or_CC C++_NNP implementations_NNS for_INthe_DT native_JJ method._, The_DT function_NN that_IN you_PRP write_VBP must_MD follow_VB the_DT prototype_NN specified_VBN in_IN the_DTgenerated_VBN header_NN file._NN You_PRP can_MD implement_VB the_DT HelloWorld.print_NNP method_NN in_IN a_DT C_NNP file_NN HelloWorld.c_.as_IN follows:_NN#include_NN <jni.h>_NN#include_NN <stdio.h>_NN#include_NN "HelloWorld.h"_NNJNIEXPORT_NNP void_NN JNICALL_NNJava_HelloWorld_print(JNIEnv_NNP *env,_, jobject_NN obj)_NN{_NNprintf("Hello_NN World!\n");_NNPreturn;_NN}_NNThe_DT implementation_NN of_IN this_DT native_JJ method_NN is_VBZ straightforward._VBN It_PRP uses_VBZ the_DT printf_NN function_NN to_TOdisplay_VBP the_DT string_NN “Hello_NNP World!”_NNP and_CC then_RB returns._VBD As_IN mentioned_VBN before,_IN both_DT arguments,_NN the_DTJNIEnv_NNP pointer_NN and_CC the_DT reference_NN to_TO the_DT object,_NN are_VBP ignored._VBNThe_DT C_NNP program_NN includes_VBZ three_CD header_NN files:_NN•_JJ jni.h_JJ —_NN This_DT header_NN file_NN provides_VBZ information_NN the_DT native_JJ code_NN needs_VBZ to_TO call_VB JNI_NNP functions_NNSWhen_WRB writing_VBG native_JJ methods,_NN you_PRP must_MD always_RB include_VB this_DT file_NN in_IN your_PRP$ C_NNP or_CC C++_NNP source_NNfiles._.•_NN stdio.h_NN —_IN The_DT code_NN snippet_NN above_RB also_RB includes_VBZ stdio.h_NN because_IN it_PRP uses_VBZ the_DT printf_NN function._NN•_NN HelloWorld.h_NNP —_NNP The_DT header_NN file_NN that_IN you_PRP generated_VBD using_VBG javah._NN It_PRP includes_VBZ the_DT C/C++_NNprototype_NN for_IN the_DT Java_HelloWorld_print_NNP function._NN4._. 5_CD Compile_NNP the_DT C_NNP Source_NN and_CC Create_NNP a_DT Native_NNP Library_NNPRemember_VB that_IN when_WRB you_PRP created_VBD the_DT HelloWorld_NNP class_NN in_IN the_DT HelloWorld.java_NNP file,_NN you_PRPincluded_VBD a_DT line_NN of_IN code_NN that_IN loaded_VBN a_DT native_JJ library_NN into_IN the_DT program:_NNSystem.loadLibrary("HelloWorld");_.Now_RB that_IN all_DT the_DT necessary_JJ C_NNP code_NN is_VBZ written,_VBN you_PRP need_VBP to_TO compile_VB HelloWorld.c_NNP and_CC build_VB this_DTnative_JJ library._NN Different_JJ operating_NN systems_NNS support_VBP different_JJ ways_NNS to_TO build_VB native_JJ libraries._NNFollowing_VBG command_NN builds_VBZ a_DT dynamic_JJ link_NN library_NN (DLL)_JJ HelloWorld.dll_NNP using_VBG the_DT Microsoft_NNPVisual_JJ C++_NNP compiler:_NNcl_NN -Ic:\java\include_NNP -Ic:\java\include\win32_.-MD_NNP -LD_NNP HelloWorld.c_NNP -FeHelloWorld.dll_.4.6_CD Run_NNP the_DT Program_NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD134_CDAt_IN this_DT point,_NN you_PRP have_VBP the_DT two_CD components_NNS ready_JJ to_TO run_VB the_DT program._NN The_DT class_NN file_NN(HelloWorld.class)_NN calls_VBZ a_DT native_JJ method,_NN and_CC the_DT native_JJ library_NN (Hello-World.dll)_NN implements_NNSthe_DT native_JJ method._NN Because_IN the_DT HelloWorld_NNP class_NN contains_VBZ its_PRP$ own_JJ main_JJ method,_NNjava_NN HelloWorld_NNPYou_PRP should_MD see_VB the_DT following_VBG output:_NNHello_UH World!_.It_PRP is_VBZ important_JJ to_TO set_VB your_PRP$ native_JJ library_NN path_NN correctly_RB for_IN your_PRP$ program_NN to_TO run._NNP The_DT native_JJlibrary_NN path_NN is_VBZ a_DT list_NN of_IN directories_NNS that_IN the_DT Java_NNP virtual_JJ machine_NN searches_NNS when_WRB loading_NN native_NNlibraries._NN5._DT RESULTS_NNP &_CC DISCUSSION_NNThe_DT aim_NN of_IN this_DT work_NN is_VBZ to_TO develop_VB software_NN that_WDT can_MD be_VB used_VBN to_TO wrap_VB existing_VBG legacy_NN code_NN in_IN C_NNPas_IN a_DT Java_NNP code_NN that_WDT calls_VBZ the_DT original_JJ code_NN through_IN the_DT Java_NNP Native_NNP Interface._NNP AWGNL_NNP can_MD be_VBapplied_VBN automatically_RB to_TO wrap_VB entire_JJ software_NN libraries_NNS thereby_RB saving_VBG time_NN and_CC substantially_RBreducing_VBG the_DT likelihood_NN of_IN introducing_VBG coding_NN errors._, AWGNL_NNP is_VBZ based_VBN on_IN the_DT Java_NNP Native_NNPInterface_NNP (JNI)_NNP [6],_IN which_WDT is_VBZ an_DT API_NN that_WDT allows_VBZ Java_NNP code_NN to_TO interact_VB with_IN code_NN written_VBN in_INanother_DT language._NNThe_DT wrapper_NN would_MD be_VB able_JJ to_TO provide_VB the_DT following_VBG functions:-_NNS•_NN It_PRP has_VBZ an_DT internal_JJ code_NN editor,_NN which_WDT provides_VBZ features_NNS like_IN load,_NN save,_NN copy,_NN paste,_NN clear,_NNSetc._FW created_VBD using_VBG JTextArea_NN control_NN under_IN java_NNP swing._.•_NN Compilation_NNP and_CC Building_NNP of_IN dll_NN files_NNS uses_VBZ VC++_NNP compiler._.•_JJ Registration_NNP of_IN DLL_NNP using_VBG windows_NNS service_NN (REGSVR32)_.•_NN Provides_VBZ automatic_JJ version_NN which_WDT accepts_VBZ simply_RB the_DT c_NN code_NN for_IN which_WDT java_NNP code_NN is_VBZ to_TO be_VBgenerated._VBN Output_NN is_VBZ .h_JJ file,_NN .dll_NN file,_NN register_NN .dll_. file,_VB java_CC classes_NNS for_IN all_DT the_DT functions,_NNcompiled_VBN java_NN classes_NNS for_IN all_DT the_DT .java_NNP files,_NN and_CC a_DT java_JJ test_NN code_NN to_TO test_VB that_IN all_PDT the_DTfunctions_NNS are_VBP available_JJ in_IN java_NNP indeed._.•_NN Provides_VBZ external_JJ code_NN editor_NN interface._. It_PRP provides_VBZ the_DT external_JJ editor_NN linkage_NN under_IN the_DTsoftware._NN User_NNP can_MD use_VB any_DT external_JJ editor_NN to_TO edit/manage_VB the_DT code._NN Editors_NNS like_IN VC++,_NNSJCreator,_NNP JEdit,_NNP NetBeans,_NNP etc._FW can_MD be_VB linked._VBN•_NN Process_NNP Builder_NNP interface._'' This_DT is_VBZ an_DT interface_NN required_VBN to_TO call_VB all_DT the_DT external_JJ compilers,_NNbuilders,_NN linkers_NNS from_IN within_IN java._NN Also_RB it_PRP is_VBZ needed_VBN to_TO capture_VB the_DT outputs_NNS of_IN all_PDT the_DTcompilers._.•_NN Execution_NNP time_NN comparison._NN Time_NN obtained_VBN from_IN all_PDT the_DT previous_JJ three_CD modules_NNS are_VBPdisplayed_VBN at_IN once_RB with_IN different_JJ amounts_NNS of_IN inputs._NN (5000,_IN 10000,_CD 50000_CD random_JJvalues)._NN5.1_CD Automatic_NNP Mode_NNPIn_IN this_DT mode_NN the_DT existing_JJ java_NN code_NN gets_VBZ compiled,_VBN the_DT header_NN file_NN gets_VBZ created_VBN and_CC DLL_NNP will_MD be_VBbuilt._NN All_RB the_DT procedure_NN in_IN manual_JJ module_NN will_MD be_VB done_VBN automatically_RB to_TO wrap_VB the_DT code_NN and_CCfinally_RB java_NNP file_NN get_VBP executed._VBN With_IN the_DT help_NN of_IN JNI_NNP native_JJ files_NNS which_WDT are_VBP written_VBN in_IN C_NNP will_MD get_VBexecuted_VBN in_IN Java_NNP environment_NN by_IN writing_VBG all_DT method_NN which_WDT we_PRP have_VBP described_VBN earlier_RBR in_IN section_NN4.The_DT following_VBG steps_NNS user_NN has_VBZ to_TO do_VB instead_RB of_IN writing_VBG whole_JJ code_NN in_IN Java_NNP while_IN using_VBGautomatic_JJ mode._NN Figure_NN 3_CD shows_VBZ how_WRB C_NNP routines_NNS get_VBP wrap_NN into_IN java_NN code._NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD135_CD•_NN In_IN automatic_JJ mode_NN user_NN write_VBP the_DT C_NNP function_NN prototype,_NN save_IN that_DT file_NN as_IN header_NN file_NN such_JJas_IN “mynativeheader.h”._NNP for_IN example,_NN C_NNP prototype_NN for_IN summation_NN of_IN two_CD integers:_NN int_NNsum_NN (int,_FW int);_FW•_JJ Write_JJ C_NNP function_NN definition_NN in_IN edit_NN C_NNP module._, Save_IN the_DT file_NN and_CC compile_NN it._.•_RB Next_JJ wrap_NN the_DT C_NNP function_NN code._NN We_PRP get_VBP the_DT java_NN code_NN automatically_RB with_IN wrapped_VBNroutine_NN of_IN C_NNP function._, Give_VB only_RB call_VB to_TO the_DT C_NNP function_NN in_IN java_NNP code,_NN compile_NN it_PRP and_CC run_VBit._.The_DT Automatic_NNP wrapper_NN for_IN java_NNP provides_VBZ interoperation_NN between_IN Java_NNP code_NN running_VBG on_IN a_DT Java_NNPVirtual_NNP Machine_NN and_CC code_NN written_VBN in_IN other_JJ programming_NN languages_NNS (e.g.,_, C,_NNP C++_NNP or_CC assembly)._POSThe_DT project_NN is_VBZ useful_JJ when_WRB existing_VBG libraries_NNS need_VBP to_TO be_VB integrated_VBN into_IN Java_NNP code,_NN or_CC when_WRBportions_NNS of_IN the_DT code_NN are_VBP implemented_VBN in_IN other_JJ languages_NNS for_IN improved_VBN performance._, The_DT Java_NNPNative_NNP Interface_NNP is_VBZ extremely_RB flexible,_JJ allowing_VBG Java_NNP methods_NNS to_TO invoke_VB native_JJ methods._NNHowever,_RB this_DT flexibility_NN comes_VBZ at_IN the_DT expense_NN of_IN extra_JJ effort_NN for_IN the_DT native_JJ language_NNprogrammer,_NN who_WP has_VBZ to_TO explicitly_RB specify_VB how_WRB to_TO connect_VB to_TO various_JJ Java_NNP objects._NNP The_DT project_NNsuggests_VBZ a_DT template-based_JJ framework_NN that_WDT relieves_VBZ the_DT native_JJ language_NN programmer_NN from_IN most_JJSof_IN this_DT burden._NN In_IN particular,_NN the_DT proposed_VBN technique_NN provides_VBZ automatic_JJ selection_NN of_IN the_DT right_NNfunctions_NNS to_TO access_NN Java_NNP objects_VBZ based_VBN on_IN their_PRP$ types._NNFigure_NN 3._CD Automatic_NNP mode_NN during_IN Execution_NNP of_IN Java_NNP files_NNS with_IN wrap_NN code_NN5.2_CD Benchmark_NNP Test_NNP between_IN C,_NNP JNI,_NNP Java_NNPInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD136_CDProgramming_NN through_IN the_DT JNI_NNP lets_VBZ you_PRP use_VBP native_JJ methods_NNS to_TO do_VB many_JJ different_JJ operations._NN A_DTnative_JJ method_NN can:_NN•_NN Utilize_NNP Java_NNP objects_NNS in_IN the_DT same_JJ way_NN that_IN a_DT Java_NNP method_NN uses_VBZ these_DT objects._FW•_NN Create_NNP Java_NNP objects,_, including_VBG arrays_NNS and_CC strings,_NN and_CC then_RB inspect_VB and_CC use_VB these_DT objects_NNSto_TO perform_VB its_PRP$ tasks._NN•_NN Inspect_NNP and_CC use_VB objects_NNS created_VBN by_IN Java_NNP application_NN code._NN•_NN Update_NNP Java_NNP objects_VBZ that_IN it_PRP created_VBD or_CC was_VBD passed_VBN to_TO it,_RP and_CC these_DT updated_VBN objects_NNS can_MDthen_RB be_VB made_VBN available_JJ to_TO the_DT Java_NNP application._NNFinally,_NNP native_JJ methods_NNS can_MD also_RB easily_RB call_VB already_RB existing_VBG Java_NNP methods,_NNS capitalizing_VBG on_IN the_DTfunctionality_NN already_RB incorporated_VBN in_IN the_DT Java_NNP programming_NN framework._NN In_IN these_DT ways,_NNS both_CC the_DTnative_JJ language_NN side_NN and_CC the_DT Java_NNP side_NN of_IN an_DT application_NN can_MD create,_VB update,_VBN and_CC access_NN Java_.objects_NNS and_CC then_RB share_VB these_DT objects_NNS between_IN them._PRP$ Figure_NN 4_CD shows_VBZ the_DT time_NN comparison_NN for_INbubble_NN sort_NN by_IN using_VBG C,_NNP JNI_NNP and_CC Java._NNP The_DT following_VBG steps_NNS show_VBP how_WRB JNI_PRP is_VBZ more_RBR efficient_JJ than_INJava._.•_JJ User_NNP develops_VBZ C_NNP code_NN for_IN different_JJ search_NN algorithms._.•_JJ User_NNP develops_VBZ the_DT functions_NNS necessary_JJ for_IN generating_VBG large_JJ random_JJ input_NN for_IN sorting_VBGalgorithms._.•_JJ Develop_NNP code_NN to_TO call_VB these_DT functions_NNS in_IN java_NN using_VBG JNI_NN•_JJ Calculate_JJ execution_NN time_NN taken_VBN by_IN every_DT algorithm._NN•_NN Display_IN the_DT time_NN taken_VBN by_IN every_DT algorithm_NN for_IN the_DT same_JJ input._NN•_NN Display_IN the_DT time_NN taken_VBN by_IN the_DT same_JJ code_NN in_IN pure_JJ java._NN•_NN Display_NNP a_DT graph_NN which_WDT represents_VBZ comparison_NN of_IN execution_NN time_NN in_IN JAVA,_NNP C_NNP and_CCWrapper_NNP Generator_NNP system_NN using_VBG JNI._NNPFigure_NN 4._VBD Execution_NNP time_NN comparison_NN between_IN C,_NNP JNI,_NNP and_CC Java_NNP code_NN for_IN Bubble_NNP sort_NNInternational_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD137_CD6._CD Conclusion_NNWrapper_NN Generator_NNP allows_VBZ programmers_NNS to_TO take_VB advantage_NN of_IN the_DT power_NN of_IN the_DT Java_NNP platform,_NNwithout_IN having_VBG to_TO abandon_VB their_PRP$ investments_NNS in_IN legacy_NN code._NN It_PRP provides_VBZ a_DT fast_JJ and_CC convenient_JJway_NN of_IN enabling_VBG legacy_JJ C_NNP routines_NNS to_TO be_VB called_VBN from_IN Java_NNP applications._. It_PRP also_RB provides_VBZfunctionality_NN to_TO deal_VB with_IN arrays_NNS of_IN structures,_NN and_CC provides_VBZ a_DT graphical_JJ user_NN interface_NN through_INwhich_WDT users_NNS can_MD wrap_VB legacy_JJ C_NNP libraries._. Even_RB conversion_NN of_IN complex_JJ data_NNS types_NNS from_IN Java_NNP to_TOJNI_NNP and_CC back_RB to_TO Java_NNP is_VBZ done_VBN automatically_RB using_VBG Wrapper_NNP Generator._NNP It_PRP provides_VBZ the_DT best_JJSsolution_NN to_TO the_DT legacy_NN code_NN problem._. And_CC usually_RB it_PRP results_VBZ in_IN better_JJR performance_NN than_IN the_DTcorresponding_JJ Java_NNP code._, The_DT Wrapper_NNP Generator_NNP will_MD also_RB be_VB extended_VBN in_IN the_DT future_NN to_TO permit_VBwrapped_VBN code_NN to_TO be_VB accessed_VBN as_IN a_DT Grid_NNP service._NN This_DT will_MD involve_VB generating_VBG a_DT description_NN of_IN the_DTservice_NN in_IN an_DT XML-based_JJ format_NN such_JJ as_IN Web_NNP Services_NNPS Description_NNP Language_NNP (WSDL),_NNP and_CCpublishing_VBG the_DT service_NN in_IN a_DT UDDI_NNP and/or_CC Jini_NNP registry._.Acknowledgement_NNI_PRP wish_VBP to_TO express_VB my_PRP$ deepest_JJS gratitude_NN to_TO K.N.Honwadkar_NNP for_IN his_PRP$ excellent_JJ guidance,_NN invaluable_NNadvices_NNS and_CC unflinching_JJ support_NN without_IN which_WDT this_DT manuscript_NN would_MD not_RB have_VB been_VBNmaterialized._NN I_PRP would_MD also_RB take_VB this_DT opportunity_NN to_TO extend_VB my_PRP$ regards_NNS to_TO my_PRP$ family_NN for_IN their_PRP$support_NN and_CC inspiration._NNReferences_NNS[1]_NN D_NNP M_NNP Beazley,_NNP “SWIG:_NNP An_DT Easy_NNP to_TO Use_VB Tool_NNP for_IN Integrating_NNP Scripting_NNP Languages_NNP with_IN C_NNP and_CC C++,”_NNPpresented_VBN at_IN the_DT 4th_JJ Tcl/Tk_NNP Workshop,_NNP Monterey,_NNP California,_NNP July_NNP 6-10,_. 1996._.[2]_DT J_NNP E_NNP Moreira,_NNP SP_NNP Midki®,_NNP M_NNP Gupta,_NNP P_NNP Atrigas,_NNP P_NNP Wu,_NNP and_CC G_NNP Almasi,_NNP The_DT NINJA_NNP Project:_NNP Making_NNP Java_NNPWork_NN for_IN High_NNP Performance_NNP Numerical_NNP Computing,"_NNP Comm._NNP ACM,_NNP Vol._NNP 44,_CD No._NN 10,_CD pages_NNS 102,109,_.October_NNP 2001._CD[3]_JJ K._NNP Pingali,_NNP P._NNP Stodgily,_NNP A_DT distributed_VBN System_NNP based_VBN on_IN Web_NNP Services_NNP for_IN Computational_NNP Science_NNPSimulations,_NNP Procs._NNP Of_IN the_DT 20th_JJ International_NNP Conference_NNP on_IN Supercomputing,_NNP 2006,_CD pp._. 297–306._.[4]_SYM M_NNP Baker,_NNP B_NNP Carpenter,_NNP G_NNP Fox,_NNP SH_NNP Ko,_NNP and_CC X-Y_NNP Li,_NNP “mpiJava:_NNP A_DT Java_NNP Interface_NNP MPI.”_NNP Presented_NNP at_IN the_DTFirst_RB UK_NNP Workshop_NNP on_IN Java_NNP for_IN High_NNP Performance_NNP Network_NNP Computing,_NNP September_NNP 2002,_CDhttp://www.npac.syr.edu/projects/pcrc/papers/mpiJava/mpiJava.pdf_NN[5]_SYM M_NNP Welsh_NNP and_CC D_NNP Culler,_NNP “Jaguar:_NNP Enabling_NNP Efficient_NNP Communication_NNP and_CC I/O_NNP in_IN Java,”_NNP Concurrency:_NNPPractice_NNP and_CC Experience,_NNP Vol._NNP 12,_CD No._NN 7,_CD pages_NNS 519–538,_IN May_NNP 2000._.[6]_SYM M_NNP Bubak,_NNP D_NNP Kurzyniec,_NNP P_NNP Luszczek,_NNP and_CC V_NNP Sunderam,_NNP “Creating_NNP Java_NNP to_TO Native_NNP Code_NNP Interfaces_NNSwith_IN Janet,”_NNP Scienific_NNP Programming,_NNP Vol._NNP 9,_CD pages_NNS 39–50,_JJ 2001._.[7]_JJ M._NNP Li,_NNP ,_, M.S._NNP Shield_NNP ,_, O.F._NNP Rana_NNP and_CC D.W._NNP Walker._NNP A_DT wrapper_NN generator_NN for_IN wrapping_VBG high_JJperformance_NN legacy_NN codes_NNS as_IN Java/CORBA_NNP components_NNS in_IN Proceedings_NNS of_IN the_DT IEEE/ACM_NNP Super_NNPComputing'00,_NNP Dellas,_NNP USA_NNP (November_NNP 2000)._.[8]_JJ M._NNP Li,_NNP O.F._NNP Rana_NNP and_CC D.W._NNP Walker,_NNP Wrapping_NNP MPI-based_JJ legacy_NN codes_NNS as_IN Java/CORBA_NNP components._.Future_NN Generation_NNP Computer_NNP Systems_NNPS (FGCS)_NNP 182_CD (2001),_IN pp._NN 213–223._.International_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD138_CD[9]_CD R_NN Gordon,_NNP “Essential_NNP JNI:_NNP Java_NNP Native_NNP Interface”,_NNP pub.Prentice_NN Hall_NNP PTR,_NNP 1998._VBD ISBN_NNP 0-13-679895-0._.[10]_JJ S._NNP Krishnan,_NNP B._NNP Stearn,_NNP K._NNP Bhatia,_NNP K._NNP Baldridge,_NNP W._NNP Li_NNP and_CC P._NNP Arzberger,,_NNP Opal:_NNP Simple_NNP Web_NNPServices_NNP Wrappers_NNP for_IN Scientific_NNP Applications,_NNP Procs._NNP ICWS’06,_NNP IEEE_NNP Computer_NNP Press,_NNP 2006,_CD pp._. 823-_.832._.[11]_JJ T._NNP Glatard,_NNP D._NNP Emsellem,_NNP J._NNP Montagnat,_NNP Generic_NNP Web_NNP Service_NNP Wrapper_NNP for_IN Efficient_NNP Embedding_NNP of_INLegacy_NNP Codes_NNP in_IN Service-based_JJ Workflows,_NNP Procs._NNP GELA_NNP 2006,_CD pp._. 44—53._.[12]_JJ T._NNP Souder_NNP and_CC S._NNP Mancoridis._NNP A_DT tool_NN for_IN securely_RB integrating_VBG legacy_NN systems_NNS into_IN a_DT distributed_VBNenvironment_NN in_IN Proceedings_NNS of_IN the_DT Sixth_NNP Working_NNP Conference_NNP on_IN Reverse_NNP Engineering_NNP (1999)_VBD pp._RB 47–55._.[13]_SYM Web_NNP Services_NNPS For_IN Grid-Enabled_JJ Problem-Solving_NNP Environments,_NNP a_DT presentation_NN on_IN the_DT Access_NNP Grid_NNPon15_IN March_NNP 2002,_CDhttp://www.cs.cf.ac.uk/user/David.W.Walker/WebServicesPSEs.ppt_VB on_IN slide_NN 50_CD[14]_JJ Y._NNP Huang_NNP et_NNP al.,_RB ”Wrapping_VBG Legacy_NNP Codes_NNP for_IN Grid-Based_JJ Applications”,_NNP in_IN Proceedings_NNP of_IN the_DT 17th_JJInternational_NNP Parallel_NNP and_CC Distributed_NNP Processing_NNP Symposium_NNP (Workshop_NNP on_IN Java_NNP for_IN HPC),_NNP 22-26_CD April_NNP2003,_CD Nice,_NNP France._NNP ISBN_NNP 0-7695-1926-1_.[15]_JJ Yan_NNP Huang_NNP and_CC Qifeng_NNP Huang,_NNP “GSiB_NNP Visual_NNP Environment_NNP for_IN Web_NNP Service_NNP Composition_NNP and_CCEnactment”_NNP Accepted_NNP as_IN a_DT poster_NN by_IN the_DT UK_NNP e-Science_NN Programme_NNP All_DT Hands_NNP Meeting_NNP 2005,_VBD held_VBN 19-_NNS22_CD September_NNP 2005_CD in_IN Nottingham,_NNP UK._.Authors_NNSK.N.Honwadkar_NNP is_VBZworking_VBG with_IN Department_NNPof_IN Computer_NNP Engineering,_NNPSD.Y.Patil_JJ College_NNP of_INEngineering,_NNP Akurdi,_NNPPune,_NNP Maharashtra,_NNP India._.He_PRP is_VBZ Registered_VBN Research_NNScholar_NNP from_IN Swami_NNPRamanand_NNP Teerth_NNPMarathwada_NNPUniversity,Nanded,India._.His_PRP$ and_CC research_NN interests_NNSinclude_VBP Network_NNP Security_NNPand_CC Human_NNP Computer_NNPInterface._NNP He_PRP attended_VBDmany_JJ conferences_NNS and_CCworkshops_NNS and_CC published_VBNover_IN 25_CD papers_NNS at_IN National_NNP/_NN International_NNP conferences._.International_NNP Journal_NNP of_IN Computer_NNP Science_NNP and_CC Information_NNP Technology,_NNP Volume_NN 2,_CD Number_NN 2,_CD April_NNP 2010_CD139_CDV.S.Vairale_NNP is_VBZ working_VBGwith_IN All_DT India_NNP Shri_NNP Shivaji_NNPMemorial_NNP Society’s_NNPCollege_NNP of_IN Engineering,_NNPSPune,_NNP Maharashtra,_NNP India._.She_PRP is_VBZ pursuing_VBG her_PRP ME_NNS(Computer)_JJ degree_NN from_IND.Y.Patil_JJ College_NNP of_INEngineering,_NNP Akurdi,Pune._NNPHer_PRP$ Research_NN interests_NNSinclude_VBP System_NNPProgramming,_NNP Network_NNPSecurity._NNP She_PRP attended_VBNmany_JJ conferences_NNS and_CC workshops_NNSand_CC published_VBN papers._.
